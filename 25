첫 번째 문제 : 수박수박수박수박수?

문제 설명
길이가 n이고, 수박수박수박수....와 같은 패턴을 유지하는 문자열을 리턴하는 함수, solution을 완성하세요. 예를들어 n이 4이면 수박수박을 리턴하고 3이라면 수박수를 리턴하면 됩니다.

제한 조건
n은 길이 10,000이하인 자연수입니다.
----------------------------------------------------------------------------------------------------------------------------------------

def solution(n):
    answer = ''
    for i in range(n):
        if answer[-1:] == '박' or answer[-1:] == '':
            answer += '수'
        else:
            answer += '박'
        
    return answer
----------------------------------------------------------------------------------------------------------------------------------------

두 번째 문제 : 문자열 내 마음대로 정렬하기

문제 설명
문자열로 구성된 리스트 strings와, 정수 n이 주어졌을 때, 각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬하려 합니다. 예를 들어 strings가 [sun, bed, car]이고 n이 1이면 각 단어의 인덱스 1의 문자 u, e, a로 strings를 정렬합니다.

제한 조건
strings는 길이 1 이상, 50이하인 배열입니다.
strings의 원소는 소문자 알파벳으로 이루어져 있습니다.
strings의 원소는 길이 1 이상, 100이하인 문자열입니다.
모든 strings의 원소의 길이는 n보다 큽니다.
인덱스 1의 문자가 같은 문자열이 여럿 일 경우, 사전순으로 앞선 문자열이 앞쪽에 위치합니다.
----------------------------------------------------------------------------------------------------------------------------------------

def solution(strings, n):
    comp = {}
    a = []
    answer = []
    strings.sort()
    for i in strings:
        
        if i[n] in comp:
            comp[i[n]] += [i]
        else:
            a.append(i[n])
            comp[i[n]] = [i]
    a.sort()
    
    for i in a:
        answer.extend(comp[i])
    return answer
