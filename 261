import java.util.*;

class Box<T> {
	T value;
	
	public Box(T v) {
		value = v;
	}
	
	public T getValue() {
		return value;
	}
}

class Search<T extends Comparable<T>> {
	
	public boolean BinarySearch(T[] arr, T target) {
		int low = 0;
		int high = arr.length - 1;
		int mid;
		while(low <= high) {
			mid = (low + high) / 2;
			
			if (arr[mid] == target) {
				return true;
			}
			else if (arr[mid].compareTo(target) > 0) {
				high = mid - 1;
			}
			else {
				low = mid + 1;
			}
		}
		return false;
	}	
}

public class Comparing extends Search{
	
	public static void main(String[] args) {
		Box<Integer> t1 = new Box<Integer>(15);
		Box<Double> t2 = new Box<Double>(14.5);
		Integer[] arr1 = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};
		Double[] arr2 = {1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,
				11.0,12.0,13.0,14.0,15.0,16.0,17.0,18.0,19.0,20.0};
		
		System.out.print("15 is in arr1 ? : ");
		System.out.println((new Search()).BinarySearch(arr1, t1.getValue())+"\n");
		
		System.out.print("14.5 is in arr2 ? : ");
		System.out.println((new Search()).BinarySearch(arr2, t2.getValue()));
		
	}	
}
