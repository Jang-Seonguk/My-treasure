1. 학생 3명의 학급에서 각각 국어 영어 수학의 시험 성적을 입력 받은 후,  각 과목 총합과 평균을 출력하는 프로그램을 작성하시오.
먼저 국어, 영어, 수학 성적을 멤버로 하는 구조체 student_t 를 정의한다.
학생이 3명이므로 student_t 타입의 변수 3개, 혹은 배열을 정의하여, 해당 변수에 성적을 입력받는다.
각 과목의 총합을 구하는 함수를 각각 작성하여 총합과 평균을 구한 후 이를 출력한다.

# include <stdio.h>

struct student_t {
	int x, y, z;

};

void sum(struct student_t arr[3])
{
	int a, b, c = 0;
	a = arr[0].x + arr[0].y + arr[0].z;
	b = arr[1].x + arr[1].y + arr[1].z;
	c = arr[2].x + arr[2].y + arr[2].z;
	printf("\t총합\t평균");
	printf("\n");
	printf("A\t%d\t%f\n", a, a / 3.0);
	printf("\n");
	printf("B\t%d\t%f\n", b, b / 3.0);
	printf("\n");
	printf("C\t%d\t%f\n", c, c / 3.0);

}

int main(void)
{
	struct student_t sts[3];
	int i;
	for (i = 0; i < 3; i++)
	{
		printf("국어 성적을 입력하세요\n");
		scanf_s("%d", &sts[i].x, sizeof(sts[i].x));
		printf("영어 성적을 입력하세요\n");
		scanf_s("%d", &sts[i].y, sizeof(sts[i].y));
		printf("수학 성적을 입력하세요\n");
		scanf_s("%d", &sts[i].z, sizeof(sts[i].z));
		printf("\n\n");
	}
	sum(sts);
	return 0;
}

-----------------------------------------------------------------------------------------------------------------------

2. 사람의 이름과 전화번호를 멤버로 하는 구조체, phonebook_t  를 정의하고, phonebook_t 타입의 배열 변수를 정의하여 키보드로부터 3명의 이름과 전화번호를 입력받는다.

    사람의 이름을 입력받으면 전화번호를 출력하는 프로그램을 작성한다. 이름이 이미 입력받은 전화번호부에 있으면 전화번호를 출력하고, 없으면 없다는 메시지를 출력한다.

# include <stdio.h>
# include <string.h>


struct phonebook_t {
	char name[100];
	int number;
};


void search(char nnn[100], struct phonebook_t list[3])
{
	int i, j = 0;
	for (i = 0; i < 3; i++)
	{
		if (strcmp(nnn, list[i].name) == 0)
		{
			printf("\n찾으시는 번호는 %d 입니다.\n\n", list[i].number);
			break;
		}
		else
		{
			j++;
		}
	}
	if (j == 3)
	{
		printf("찾으시는 번호가 없습니다.");
	}
}


int main(void)
{
	struct phonebook_t arr[3];
	int i;
	char k;
	char x[100];
	for (i = 0; i < 3; i++)
	{
		printf("이름을 입력하세요\n");
		scanf_s("%s", &arr[i].name, sizeof(arr[i].name));
		printf("번호를 입력하세요\n");
		scanf_s("%d", &arr[i].number, sizeof(arr[i].number));
		printf("\n\n");
	}

	while (1)
	{
		getchar();
		printf("사람을 찾으시겠습니까? (y/n)\n");
		scanf_s("%s", &k, sizeof(k));
		

		if (k == 'n')
		{
			break;
		}
		else if (k == 'y')
		{
			printf("사람의 이름은 ? \n");
			scanf_s("%s", &x, sizeof(x));
			search(x, arr);
		}

	}
	return 0;
}
