첫 번째 문제 : 소수 찾기

문제 설명
1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하는 함수, solution을 만들어 보세요.

소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.
(1은 소수가 아닙니다.)

제한 조건
n은 2이상 1000000이하의 자연수입니다.

-----------------------------------------------------------------------------------------------------------

def solution(n): # 작성 완료
    comp = [True] * (n + 1)
    answer = 0
    count = 0
    sss = [2]
    
    for i in range(1, int(n ** 0.5) + 1, 2):
        for j in range(1, i + 1):
            if i % j == 0:
                count += 1
        if count == 2:
            sss.append(i)
        count = 0
        
    for i in sss:
        comp[0::i] = [False] * len(comp[0::i])
        
    comp[1] = False
    
    
    return comp.count(True) + len(sss)
    
----------------------------------------------------------------------------------------------------------

두 번째 문제 : 정수 내림차순으로 배치하기

문제 설명
함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 예를들어 n이 118372면 873211을 리턴하면 됩니다.

제한 조건
n은 1이상 8000000000 이하인 자연수입니다.

----------------------------------------------------------------------------------------------------------

def solution(n):
    n = str(n)
    answer = ''
    for i in range(9, -1, -1):
        if str(i) in n:
            answer += str(i) * n.count(str(i))
            
    return int(answer)
