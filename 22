1. 문자열 다루기 기본

문제 설명
문자열 s의 길이가 4 혹은 6이고, 숫자로만 구성돼있는지 확인해주는 함수, solution을 완성하세요. 예를 들어 s가 a234이면 False를 리턴하고 1234라면 True를 리턴하면 됩니다.

제한 사항
s는 길이 1 이상, 길이 8 이하인 문자열입니다.
---------------------------------------------------------------------------------------------------------------------

정답

def solution(s):
    a = '1234567890'
    if len(s) != 4 and len(s) != 6:
        return False
    for i in s:
        if i not in a:
            return False
    
    return True
----------------------------------------------------------------------------------------------------------------------

2. 서울에서 김서방 찾기

문제 설명
String형 배열 seoul의 element중 Kim의 위치 x를 찾아, 김서방은 x에 있다는 String을 반환하는 함수, solution을 완성하세요. seoul에 Kim은 오직 한 번만 나타나며 잘못된 값이 입력되는 경우는 없습니다.

제한 사항
seoul은 길이 1 이상, 1000 이하인 배열입니다.
seoul의 원소는 길이 1 이상, 20 이하인 문자열입니다.
Kim은 반드시 seoul 안에 포함되어 있습니다.
----------------------------------------------------------------------------------------------------------------------

def solution(seoul):
    answer = ''
    index = 0
    for i in range(len(seoul)):
        if seoul[i] == 'Kim':
            index = i
    answer = '김서방은 {}에 있다'.format(index)
    return answer
----------------------------------------------------------------------------------------------------------------------

3. 나누어 떨어지는 숫자 배열

문제 설명
array의 각 element 중 divisor로 나누어 떨어지는 값을 오름차순으로 정렬한 배열을 반환하는 함수, solution을 작성해주세요.
divisor로 나누어 떨어지는 element가 하나도 없다면 배열에 -1을 담아 반환하세요.

제한사항
arr은 자연수를 담은 배열입니다.
정수 i, j에 대해 i ≠ j 이면 arr[i] ≠ arr[j] 입니다.
divisor는 자연수입니다.
array는 길이 1 이상인 배열입니다.
----------------------------------------------------------------------------------------------------------------------

def solution(arr, divisor):
    answer = []
    for i in arr:
        if i % divisor == 0:
            answer.append(i)
    if answer == []:
        answer.append(-1)
    answer.sort()
    
    return answer



   
